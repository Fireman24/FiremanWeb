// <auto-generated />
using FiremanApi2.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace FiremanApi2.Migrations
{
    [DbContext(typeof(FireContext))]
    partial class FireContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("FiremanApi2.Model.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Category");

                    b.Property<int?>("DepartmentId");

                    b.Property<string>("Description");

                    b.Property<int?>("GpsPointId");

                    b.Property<string>("Label");

                    b.Property<string>("Place");

                    b.Property<int>("Rank");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("GpsPointId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("FiremanApi2.Model.Broadcast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.ToTable("VideoStructs");
                });

            modelBuilder.Entity("FiremanApi2.Model.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<bool>("Active");

                    b.Property<string>("Address")
                        .HasColumnName("address");

                    b.Property<int?>("GpsPointId");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("GpsPointId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("FiremanApi2.Model.Departure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<bool>("Active")
                        .HasColumnName("active");

                    b.Property<string>("Address")
                        .HasColumnName("address");

                    b.Property<string>("Comments")
                        .HasColumnName("comments");

                    b.Property<DateTime>("DateTime")
                        .HasColumnName("date_time");

                    b.Property<int?>("GpsPointId");

                    b.Property<string>("Intent")
                        .HasColumnName("intent");

                    b.Property<string>("Manager")
                        .HasColumnName("manager");

                    b.Property<int?>("OperatorId");

                    b.Property<string>("Receiver")
                        .HasColumnName("receiver");

                    b.HasKey("Id");

                    b.HasIndex("GpsPointId");

                    b.HasIndex("OperatorId");

                    b.ToTable("Departures");
                });

            modelBuilder.Entity("FiremanApi2.Model.Fire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<bool>("Active")
                        .HasColumnName("active");

                    b.Property<string>("Address")
                        .HasColumnName("address");

                    b.Property<string>("Comments")
                        .HasColumnName("comments");

                    b.Property<int?>("DepartmentId");

                    b.Property<DateTime?>("FinishDateTime")
                        .HasColumnName("finish_time");

                    b.Property<int?>("GpsPointId");

                    b.Property<string>("Manager")
                        .HasColumnName("manager");

                    b.Property<int?>("OperatorId");

                    b.Property<int>("Rank")
                        .HasColumnName("rank");

                    b.Property<string>("Receiver")
                        .HasColumnName("receiver");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnName("start_time");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("GpsPointId");

                    b.HasIndex("OperatorId");

                    b.ToTable("Fires");
                });

            modelBuilder.Entity("FiremanApi2.Model.FireCar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<bool>("Active")
                        .HasColumnName("active");

                    b.Property<int?>("BroadcastId");

                    b.Property<int?>("DepartmentId");

                    b.Property<int?>("DepartureId");

                    b.Property<int?>("FireId");

                    b.Property<int?>("GpsPointId");

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnName("lastUpdate");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.Property<string>("Num")
                        .HasColumnName("num");

                    b.Property<string>("Specialization")
                        .HasColumnName("spec");

                    b.HasKey("Id");

                    b.HasIndex("BroadcastId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DepartureId");

                    b.HasIndex("FireId");

                    b.HasIndex("GpsPointId");

                    b.ToTable("FireCars");
                });

            modelBuilder.Entity("FiremanApi2.Model.GpsPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<double>("Lat")
                        .HasColumnName("lat");

                    b.Property<double>("Lon")
                        .HasColumnName("lon");

                    b.HasKey("Id");

                    b.ToTable("GpsPoints");
                });

            modelBuilder.Entity("FiremanApi2.Model.GpsRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateTime");

                    b.Property<int?>("FireCarId");

                    b.Property<int?>("FireId");

                    b.Property<int?>("GpsPointId");

                    b.HasKey("Id");

                    b.HasIndex("FireCarId");

                    b.HasIndex("FireId");

                    b.HasIndex("GpsPointId");

                    b.ToTable("GpsLog");
                });

            modelBuilder.Entity("FiremanApi2.Model.HistoryRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("DateTime")
                        .HasColumnName("dateTime");

                    b.Property<int?>("DepartureId");

                    b.Property<int?>("FireId");

                    b.Property<string>("Record")
                        .HasColumnName("record");

                    b.HasKey("Id");

                    b.HasIndex("DepartureId");

                    b.HasIndex("FireId");

                    b.ToTable("HistoryRecord");
                });

            modelBuilder.Entity("FiremanApi2.Model.Hydrant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<bool>("Active")
                        .HasColumnName("active");

                    b.Property<string>("Description")
                        .HasColumnName("descr");

                    b.Property<string>("FaulProblem")
                        .HasColumnName("fault_problem");

                    b.Property<int?>("GpsPointId");

                    b.Property<string>("Place")
                        .HasColumnName("place");

                    b.Property<string>("Responsible")
                        .HasColumnName("responsible");

                    b.Property<DateTime>("RevisionDate")
                        .HasColumnName("revision_date");

                    b.Property<string>("WaterType")
                        .HasColumnName("water_type");

                    b.HasKey("Id");

                    b.HasIndex("GpsPointId");

                    b.ToTable("Hydrants");
                });

            modelBuilder.Entity("FiremanApi2.Model.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("DepartureId");

                    b.Property<int?>("FireId");

                    b.Property<string>("Name");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("DepartureId");

                    b.HasIndex("FireId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("FiremanApi2.Model.Operator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<bool>("Active")
                        .HasColumnName("active");

                    b.Property<int?>("GeoZoneId");

                    b.Property<string>("Key")
                        .HasColumnName("key");

                    b.Property<string>("Login")
                        .HasColumnName("login");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.Property<string>("Role")
                        .HasColumnName("role");

                    b.HasKey("Id");

                    b.HasIndex("GeoZoneId");

                    b.ToTable("Operators");
                });

            modelBuilder.Entity("FiremanApi2.Model.Address", b =>
                {
                    b.HasOne("FiremanApi2.Model.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("FiremanApi2.Model.GpsPoint", "GpsPoint")
                        .WithMany()
                        .HasForeignKey("GpsPointId");
                });

            modelBuilder.Entity("FiremanApi2.Model.Department", b =>
                {
                    b.HasOne("FiremanApi2.Model.GpsPoint", "GpsPoint")
                        .WithMany()
                        .HasForeignKey("GpsPointId");
                });

            modelBuilder.Entity("FiremanApi2.Model.Departure", b =>
                {
                    b.HasOne("FiremanApi2.Model.GpsPoint", "GpsPoint")
                        .WithMany()
                        .HasForeignKey("GpsPointId");

                    b.HasOne("FiremanApi2.Model.Operator", "Operator")
                        .WithMany()
                        .HasForeignKey("OperatorId");
                });

            modelBuilder.Entity("FiremanApi2.Model.Fire", b =>
                {
                    b.HasOne("FiremanApi2.Model.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("FiremanApi2.Model.GpsPoint", "GpsPoint")
                        .WithMany()
                        .HasForeignKey("GpsPointId");

                    b.HasOne("FiremanApi2.Model.Operator", "Operator")
                        .WithMany("Fires")
                        .HasForeignKey("OperatorId");
                });

            modelBuilder.Entity("FiremanApi2.Model.FireCar", b =>
                {
                    b.HasOne("FiremanApi2.Model.Broadcast", "Broadcast")
                        .WithMany()
                        .HasForeignKey("BroadcastId");

                    b.HasOne("FiremanApi2.Model.Department", "Department")
                        .WithMany("FireCars")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("FiremanApi2.Model.Departure")
                        .WithMany("FireCars")
                        .HasForeignKey("DepartureId");

                    b.HasOne("FiremanApi2.Model.Fire", "Fire")
                        .WithMany("FireCars")
                        .HasForeignKey("FireId");

                    b.HasOne("FiremanApi2.Model.GpsPoint", "GpsPoint")
                        .WithMany()
                        .HasForeignKey("GpsPointId");
                });

            modelBuilder.Entity("FiremanApi2.Model.GpsRecord", b =>
                {
                    b.HasOne("FiremanApi2.Model.FireCar", "FireCar")
                        .WithMany()
                        .HasForeignKey("FireCarId");

                    b.HasOne("FiremanApi2.Model.Fire", "Fire")
                        .WithMany()
                        .HasForeignKey("FireId");

                    b.HasOne("FiremanApi2.Model.GpsPoint", "GpsPoint")
                        .WithMany()
                        .HasForeignKey("GpsPointId");
                });

            modelBuilder.Entity("FiremanApi2.Model.HistoryRecord", b =>
                {
                    b.HasOne("FiremanApi2.Model.Departure")
                        .WithMany("History")
                        .HasForeignKey("DepartureId");

                    b.HasOne("FiremanApi2.Model.Fire")
                        .WithMany("History")
                        .HasForeignKey("FireId");
                });

            modelBuilder.Entity("FiremanApi2.Model.Hydrant", b =>
                {
                    b.HasOne("FiremanApi2.Model.GpsPoint", "GpsPoint")
                        .WithMany()
                        .HasForeignKey("GpsPointId");
                });

            modelBuilder.Entity("FiremanApi2.Model.Image", b =>
                {
                    b.HasOne("FiremanApi2.Model.Departure")
                        .WithMany("Images")
                        .HasForeignKey("DepartureId");

                    b.HasOne("FiremanApi2.Model.Fire")
                        .WithMany("Images")
                        .HasForeignKey("FireId");
                });

            modelBuilder.Entity("FiremanApi2.Model.Operator", b =>
                {
                    b.HasOne("FiremanApi2.Model.GpsPoint", "GeoZone")
                        .WithMany()
                        .HasForeignKey("GeoZoneId");
                });
#pragma warning restore 612, 618
        }
    }
}
